knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
master_df <- read.csv("master_df.csv")
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
master_df <- master_df %>%
mutate(week = week(date))
top_artists <- master_df %>%
group_by(artist) %>%
summarise(total_streams = sum(streams)) %>%
arrange(desc(total_streams)) %>%
top_n(6)
top_artists <- top_artists$artist
top_artists <- c(top_artists,'Queen')
weekly_streams <- master_df %>%
filter(artist %in% top_artists) %>%
group_by(artist, week) %>%
summarise(streams_each_week = sum(streams)) %>%
arrange(week,desc(streams_each_week))
ggplot(weekly_streams) + geom_line(aes(x = week, y = weekly_streams$streams_each_week, color= weekly_streams$artist)) +
scale_y_continuous(labels = scales::comma) +
xlab("Week") +
ylab("Number of Streams") +
ggtitle("Top Artists by Week") +
labs(colour="Artist") +
theme_minimal() +
theme(text = element_text(size=16))
# ggsave("top_artists.png", dpi=1000, height = 12, width = 32, units = 'in')
knitr::opts_chunk$set(echo = TRUE)
if(!require(readxl)){install.packages("readxl");require(readxl)}
if(!require(reshape2)){install.packages("reshape2");require(reshape2)}
# manually set genres into a few categories due to the insane variety of Spotify's genres
genres <- read_excel("genre_data.xlsx")
melted_genre <- melt(genres)
ggplot(melted_genre, aes(x = reorder(variable, value), y = value)) +
geom_bar(stat = "identity", fill = c("#60ce87","#4ac776","#33c065","#1db954","#1aa64b","#179443","#14813a","#116f32")) +
coord_flip() +
xlab("Genre") +
ylab("Number of Artists") +
theme(legend.position = "none") +
theme_minimal() +
theme(text = element_text(size=15))
# ggsave("genre.png", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
if(!require(readxl)){install.packages("readxl");require(readxl)}
if(!require(reshape2)){install.packages("reshape2");require(reshape2)}
# manually set genres into a few categories due to the insane variety of Spotify's genres
genres <- read_excel("genre_data.xlsx")
melted_genre <- melt(genres)
ggplot(melted_genre, aes(x = reorder(variable, value), y = value)) +
geom_bar(stat = "identity", fill = c("#60ce87","#4ac776","#33c065","#1db954","#1aa64b","#179443","#14813a","#116f32")) +
coord_flip() +
xlab("Genre") +
ylab("Number of Artists") +
theme(legend.position = "none") +
theme_minimal() +
theme(text = element_text(size=15))
# ggsave("genre.png", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(tools)){install.packages("tools");require(tools)}
# if(!require(scales)){install.packages("scales");require(scales)}
# if(!require(fmsb)){install.packages("fmsb");require(fmsb)}
master_df <- read.csv("master_df.csv", header = TRUE)
audio_analysis <- master_df %>%
distinct(track_id, .keep_all = TRUE) %>%
select(energy,loudness,speechiness,acousticness,instrumentalness,liveness,valence)
audio_analysis$loudness <- ((audio_analysis$loudness + 60)/60)
audio_analysis <- as.data.frame(colMeans(audio_analysis))
audio_analysis <- tibble::rownames_to_column(audio_analysis, var = "variable")
names(audio_analysis)[2] <- "average"
audio_analysis$variable <- toTitleCase(audio_analysis$variable)
audio_plot = ggplot(audio_analysis, aes(x = as.factor(variable), y = average)) +
geom_hline(yintercept = seq(0, 1, by = .25), colour = "#212121", size = 0.2) +
ylim(0,1) + theme_minimal() + coord_polar(clip = "off") +
theme(axis.text.y = element_text(hjust = 10), panel.grid = element_blank(), panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "black")) + xlab("") + ylab("") +
theme(axis.text = element_text(size=16), axis.title=element_text(size = 16, face = "bold"), axis.text.y = element_blank())
audio_plot + geom_bar(stat = "identity", fill = alpha("#1DB954")) + geom_vline(xintercept = seq(0, 360, by = 45), colour = "#535353", size = 0.2)
# ggsave("radar_plot.png",dpi=2000)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(tidyverse)){install.packages("tidyverse");require(tidyverse)}
# if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(RColorBrewer)){install.packages("RColorBrewer");require(RColorBrewer)}
master_df <- read.csv('master_df.csv')
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
michael <- master_df %>%
filter(artist == "Michael BublÃ©", month(date) == 12) %>%
group_by(artist, date) %>%
summarise(daily_streams = sum(streams)) %>%
arrange(day(date),desc(daily_streams))
x <- michael$daily_streams
empty <- c(0, 0, 0, 0, 0)
x <- append(x,empty)
clock.plot <- function (x, col = c("#a4e3ba","#a4e3ba","#8edca9","#8edca9","#77d598","#77d598","#60ce87","#60ce87","#4ac776","#4ac776","#33c065","#33c065","#1db954","#1db954","#1aa64b","#1aa64b","#179443","#179443","#14813a","#14813a","#116f32","#116f32","#0e5c2a","#0e5c2a","#0b4a21","#0b4a21"), ...) {
if( min(x)<0 ) x <- x - min(x)
if( max(x)>1 ) x <- x/max(x)
n <- length(x)
if(is.null(names(x))) names(x) <- 0:(n-1)
m <- 1.05
plot(0, type = 'n', xlim = c(-m,m), ylim = c(-m,m), axes = F, xlab = '', ylab = '', ...)
a <- pi/2 - 2*pi/200*0:200
polygon( cos(a), sin(a) )
v <- .02
a <- pi/2 - 2*pi/n*0:n
segments( (1+v)*cos(a), (1+v)*sin(a), (1-v)*cos(a), (1-v)*sin(a))
segments( cos(a), sin(a),0, 0, col = 'light gray', lty = 3)
ca <- -2*pi/n*(0:50)/50
for (i in 1:n) {
a <- pi/2 - 2*pi/n*(i-1)
b <- pi/2 - 2*pi/n*i
polygon( c(0, x[i]*cos(a+ca), 0), c(0, x[i]*sin(a+ca), 0), col=col[i] )
v <- .1
text((1+v)*cos(a), (1+v)*sin(a), names(x)[i])
}
}
# Use the function on the created data
clock.plot(x, main = "Number of Streams for Michael Buble in December", cex=3)
knitr::opts_chunk$set(echo = TRUE)
# if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
# if(!require(ggmosaic)){install.packages("ggmosaic");require(ggmosaic)}
if(!require(readxl)){install.packages("readxl");require(readxl)}
if(!require(reshape2)){install.packages("reshape2");require(reshape2)}
# manually set genres into a few categories due to the insane variety of Spotify's genres
genres <- read_excel("genre_data.xlsx")
melted_genre <- melt(genres)
ggplot(melted_genre, aes(x = reorder(variable, value), y = value)) +
geom_bar(stat = "identity", fill = c("#60ce87","#4ac776","#33c065","#1db954","#1aa64b","#179443","#14813a","#116f32")) +
coord_flip() +
xlab("Genre") +
ylab("Number of Artists") +
theme(legend.position = "none") +
theme_minimal() +
theme(text = element_text(size=15))
# if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
# if(!require(ggmosaic)){install.packages("ggmosaic");require(ggmosaic)}
if(!require(readxl)){install.packages("readxl");require(readxl)}
if(!require(reshape2)){install.packages("reshape2");require(reshape2)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
# manually set genres into a few categories due to the insane variety of Spotify's genres
genres <- read_excel("genre_data.xlsx")
melted_genre <- melt(genres)
ggplot(melted_genre, aes(x = reorder(variable, value), y = value)) +
geom_bar(stat = "identity", fill = c("#60ce87","#4ac776","#33c065","#1db954","#1aa64b","#179443","#14813a","#116f32")) +
coord_flip() +
xlab("Genre") +
ylab("Number of Artists") +
theme(legend.position = "none") +
theme_minimal() +
theme(text = element_text(size=15))
# ggsave("genre.png", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
if(!require(readxl)){install.packages("readxl");require(readxl)}
if(!require(reshape2)){install.packages("reshape2");require(reshape2)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
# manually set genres into a few categories due to the insane variety of Spotify's genres
genres <- read_excel("genre_data.xlsx")
melted_genre <- melt(genres)
ggplot(melted_genre, aes(x = reorder(variable, value), y = value)) +
geom_bar(stat = "identity", fill = c("#60ce87","#4ac776","#33c065","#1db954","#1aa64b","#179443","#14813a","#116f32")) +
coord_flip() +
xlab("Genre") +
ylab("Number of Artists") +
theme(legend.position = "none") +
theme_minimal() +
theme(text = element_text(size=15))
# ggsave("genre.png", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(tools)){install.packages("tools");require(tools)}
# if(!require(scales)){install.packages("scales");require(scales)}
# if(!require(fmsb)){install.packages("fmsb");require(fmsb)}
master_df <- read.csv("master_df.csv", header = TRUE)
audio_analysis <- master_df %>%
distinct(track_id, .keep_all = TRUE) %>%
select(energy,loudness,speechiness,acousticness,instrumentalness,liveness,valence)
audio_analysis$loudness <- ((audio_analysis$loudness + 60)/60)
audio_analysis <- as.data.frame(colMeans(audio_analysis))
audio_analysis <- tibble::rownames_to_column(audio_analysis, var = "variable")
names(audio_analysis)[2] <- "average"
audio_analysis$variable <- toTitleCase(audio_analysis$variable)
audio_plot = ggplot(audio_analysis, aes(x = as.factor(variable), y = average)) +
geom_hline(yintercept = seq(0, 1, by = .25), colour = "#212121", size = 0.2) +
ylim(0,1) + theme_minimal() + coord_polar(clip = "off") +
theme(axis.text.y = element_text(hjust = 10), panel.grid = element_blank(), panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "black")) + xlab("") + ylab("") +
theme(axis.text = element_text(size=16), axis.title=element_text(size = 16, face = "bold"), axis.text.y = element_blank())
audio_plot + geom_bar(stat = "identity", fill = alpha("#1DB954")) + geom_vline(xintercept = seq(0, 360, by = 45), colour = "#535353", size = 0.2)
# ggsave("radar_plot.png",dpi=2000)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(tidyverse)){install.packages("tidyverse");require(tidyverse)}
# if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(RColorBrewer)){install.packages("RColorBrewer");require(RColorBrewer)}
master_df <- read.csv('master_df.csv')
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
michael <- master_df %>%
filter(artist == "Michael BublÃ©", month(date) == 12) %>%
group_by(artist, date) %>%
summarise(daily_streams = sum(streams)) %>%
arrange(day(date),desc(daily_streams))
x <- michael$daily_streams
empty <- c(0, 0, 0, 0, 0)
x <- append(x,empty)
clock.plot <- function (x, col = c("#a4e3ba","#a4e3ba","#8edca9","#8edca9","#77d598","#77d598","#60ce87","#60ce87","#4ac776","#4ac776","#33c065","#33c065","#1db954","#1db954","#1aa64b","#1aa64b","#179443","#179443","#14813a","#14813a","#116f32","#116f32","#0e5c2a","#0e5c2a","#0b4a21","#0b4a21"), ...) {
if( min(x)<0 ) x <- x - min(x)
if( max(x)>1 ) x <- x/max(x)
n <- length(x)
if(is.null(names(x))) names(x) <- 0:(n-1)
m <- 1.05
plot(0, type = 'n', xlim = c(-m,m), ylim = c(-m,m), axes = F, xlab = '', ylab = '', ...)
a <- pi/2 - 2*pi/200*0:200
polygon( cos(a), sin(a) )
v <- .02
a <- pi/2 - 2*pi/n*0:n
segments( (1+v)*cos(a), (1+v)*sin(a), (1-v)*cos(a), (1-v)*sin(a))
segments( cos(a), sin(a),0, 0, col = 'light gray', lty = 3)
ca <- -2*pi/n*(0:50)/50
for (i in 1:n) {
a <- pi/2 - 2*pi/n*(i-1)
b <- pi/2 - 2*pi/n*i
polygon( c(0, x[i]*cos(a+ca), 0), c(0, x[i]*sin(a+ca), 0), col=col[i] )
v <- .1
text((1+v)*cos(a), (1+v)*sin(a), names(x)[i])
}
}
# Use the function on the created data
clock.plot(x, main = "Number of Streams for Michael Buble in December", cex=3)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
master_df <- read.csv("master_df.csv")
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
master_df <- master_df %>%
mutate(week = week(date))
top_artists <- master_df %>%
group_by(artist) %>%
summarise(total_streams = sum(streams)) %>%
arrange(desc(total_streams)) %>%
top_n(6)
top_artists <- top_artists$artist
top_artists <- c(top_artists,'Queen')
weekly_streams <- master_df %>%
filter(artist %in% top_artists) %>%
group_by(artist, week) %>%
summarise(streams_each_week = sum(streams)) %>%
arrange(week,desc(streams_each_week))
ggplot(weekly_streams) + geom_line(aes(x = week, y = weekly_streams$streams_each_week, color= weekly_streams$artist)) +
scale_y_continuous(labels = scales::comma) +
xlab("Week") +
ylab("Number of Streams") +
ggtitle("Top Artists by Week") +
labs(colour="Artist") +
theme_minimal() +
theme(text = element_text(size=16))
# ggsave("top_artists.png", dpi=1000, height = 12, width = 32, units = 'in')
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(tools)){install.packages("tools");require(tools)}
# if(!require(scales)){install.packages("scales");require(scales)}
# if(!require(fmsb)){install.packages("fmsb");require(fmsb)}
master_df <- read.csv("master_df.csv", header = TRUE)
audio_analysis <- master_df %>%
distinct(track_id, .keep_all = TRUE) %>%
select(energy,loudness,speechiness,acousticness,instrumentalness,liveness,valence)
audio_analysis$loudness <- ((audio_analysis$loudness + 60)/60)
audio_analysis <- as.data.frame(colMeans(audio_analysis))
audio_analysis <- tibble::rownames_to_column(audio_analysis, var = "variable")
names(audio_analysis)[2] <- "average"
audio_analysis$variable <- toTitleCase(audio_analysis$variable)
audio_plot = ggplot(audio_analysis, aes(x = as.factor(variable), y = average)) +
geom_hline(yintercept = seq(0, 1, by = .25), colour = "#212121", size = 0.2) +
ylim(0,1) + theme_minimal() + coord_polar(clip = "off") +
theme(axis.text.y = element_text(hjust = 10), panel.grid = element_blank(), panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "black")) + xlab("") + ylab("") +
theme(axis.text = element_text(size=16), axis.title=element_text(size = 16, face = "bold"), axis.text.y = element_blank())
audio_plot + geom_bar(stat = "identity", fill = alpha("#1DB954")) + geom_vline(xintercept = seq(0, 360, by = 45), colour = "#535353", size = 0.2)
# ggsave("radar_plot.png",dpi=2000)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(tidyverse)){install.packages("tidyverse");require(tidyverse)}
# if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(RColorBrewer)){install.packages("RColorBrewer");require(RColorBrewer)}
master_df <- read.csv('master_df.csv')
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
michael <- master_df %>%
filter(artist == "Michael BublÃ©", month(date) == 12) %>%
group_by(artist, date) %>%
summarise(daily_streams = sum(streams)) %>%
arrange(day(date),desc(daily_streams))
x <- michael$daily_streams
empty <- c(0, 0, 0, 0, 0)
x <- append(x,empty)
clock.plot <- function (x, col = c("#a4e3ba","#a4e3ba","#8edca9","#8edca9","#77d598","#77d598","#60ce87","#60ce87","#4ac776","#4ac776","#33c065","#33c065","#1db954","#1db954","#1aa64b","#1aa64b","#179443","#179443","#14813a","#14813a","#116f32","#116f32","#0e5c2a","#0e5c2a","#0b4a21","#0b4a21"), ...) {
if( min(x)<0 ) x <- x - min(x)
if( max(x)>1 ) x <- x/max(x)
n <- length(x)
if(is.null(names(x))) names(x) <- 0:(n-1)
m <- 1.05
plot(0, type = 'n', xlim = c(-m,m), ylim = c(-m,m), axes = F, xlab = '', ylab = '', ...)
a <- pi/2 - 2*pi/200*0:200
polygon( cos(a), sin(a) )
v <- .02
a <- pi/2 - 2*pi/n*0:n
segments( (1+v)*cos(a), (1+v)*sin(a), (1-v)*cos(a), (1-v)*sin(a))
segments( cos(a), sin(a),0, 0, col = 'light gray', lty = 3)
ca <- -2*pi/n*(0:50)/50
for (i in 1:n) {
a <- pi/2 - 2*pi/n*(i-1)
b <- pi/2 - 2*pi/n*i
polygon( c(0, x[i]*cos(a+ca), 0), c(0, x[i]*sin(a+ca), 0), col=col[i] )
v <- .1
text((1+v)*cos(a), (1+v)*sin(a), names(x)[i])
}
}
# Use the function on the created data
clock.plot(x, main = "Number of Streams for Michael Buble in December", cex=3)
knitr::opts_chunk$set(echo = TRUE)
if(!require(dplyr)){install.packages("dplyr");require(dplyr)}
if(!require(lubridate)){install.packages("lubridate");require(lubridate)}
if(!require(ggplot2)){install.packages("ggplot2");require(ggplot2)}
master_df <- read.csv("master_df.csv")
master_df$date <- as.Date(master_df$date,format = '%Y-%m-%d')
master_df$artist <- as.character(master_df$artist)
master_df$streams <- as.numeric(master_df$streams)
master_df <- master_df %>%
mutate(week = week(date))
top_artists <- master_df %>%
group_by(artist) %>%
summarise(total_streams = sum(streams)) %>%
arrange(desc(total_streams)) %>%
top_n(6)
top_artists <- top_artists$artist
top_artists <- c(top_artists,'Queen')
weekly_streams <- master_df %>%
filter(artist %in% top_artists) %>%
group_by(artist, week) %>%
summarise(streams_each_week = sum(streams)) %>%
arrange(week,desc(streams_each_week))
ggplot(weekly_streams) + geom_line(aes(x = week, y = weekly_streams$streams_each_week, color= weekly_streams$artist)) +
scale_y_continuous(labels = scales::comma) +
xlab("Week") +
ylab("Number of Streams") +
ggtitle("Top Artists by Week") +
labs(colour="Artist") +
theme_minimal() +
theme(text = element_text(size=16))
# ggsave("top_artists.png", dpi=1000, height = 12, width = 32, units = 'in')
